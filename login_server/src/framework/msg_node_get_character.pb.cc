// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_node_get_character.proto

#include "msg_node_get_character.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace node {
class GetCharacterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCharacterRequest> _instance;
} _GetCharacterRequest_default_instance_;
class GetCharacterResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCharacterResponse> _instance;
} _GetCharacterResponse_default_instance_;
}  // namespace node
static void InitDefaultsscc_info_GetCharacterRequest_msg_5fnode_5fget_5fcharacter_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::node::_GetCharacterRequest_default_instance_;
    new (ptr) ::node::GetCharacterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::node::GetCharacterRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetCharacterRequest_msg_5fnode_5fget_5fcharacter_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetCharacterRequest_msg_5fnode_5fget_5fcharacter_2eproto}, {}};

static void InitDefaultsscc_info_GetCharacterResponse_msg_5fnode_5fget_5fcharacter_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::node::_GetCharacterResponse_default_instance_;
    new (ptr) ::node::GetCharacterResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::node::GetCharacterResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetCharacterResponse_msg_5fnode_5fget_5fcharacter_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetCharacterResponse_msg_5fnode_5fget_5fcharacter_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_msg_5fnode_5fget_5fcharacter_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_msg_5fnode_5fget_5fcharacter_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_msg_5fnode_5fget_5fcharacter_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_msg_5fnode_5fget_5fcharacter_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::node::GetCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::node::GetCharacterRequest, kick_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::node::GetCharacterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::node::GetCharacterResponse, cfgid_),
  PROTOBUF_FIELD_OFFSET(::node::GetCharacterResponse, name_),
  PROTOBUF_FIELD_OFFSET(::node::GetCharacterResponse, info_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::node::GetCharacterRequest)},
  { 6, -1, sizeof(::node::GetCharacterResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::node::_GetCharacterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::node::_GetCharacterResponse_default_instance_),
};

const char descriptor_table_protodef_msg_5fnode_5fget_5fcharacter_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034msg_node_get_character.proto\022\004node\"#\n\023"
  "GetCharacterRequest\022\014\n\004kick\030\001 \001(\010\"A\n\024Get"
  "CharacterResponse\022\r\n\005cfgid\030\001 \001(\r\022\014\n\004name"
  "\030\002 \001(\t\022\014\n\004info\030\003 \001(\014b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_msg_5fnode_5fget_5fcharacter_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_msg_5fnode_5fget_5fcharacter_2eproto_sccs[2] = {
  &scc_info_GetCharacterRequest_msg_5fnode_5fget_5fcharacter_2eproto.base,
  &scc_info_GetCharacterResponse_msg_5fnode_5fget_5fcharacter_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_msg_5fnode_5fget_5fcharacter_2eproto_once;
static bool descriptor_table_msg_5fnode_5fget_5fcharacter_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_msg_5fnode_5fget_5fcharacter_2eproto = {
  &descriptor_table_msg_5fnode_5fget_5fcharacter_2eproto_initialized, descriptor_table_protodef_msg_5fnode_5fget_5fcharacter_2eproto, "msg_node_get_character.proto", 148,
  &descriptor_table_msg_5fnode_5fget_5fcharacter_2eproto_once, descriptor_table_msg_5fnode_5fget_5fcharacter_2eproto_sccs, descriptor_table_msg_5fnode_5fget_5fcharacter_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_msg_5fnode_5fget_5fcharacter_2eproto::offsets,
  file_level_metadata_msg_5fnode_5fget_5fcharacter_2eproto, 2, file_level_enum_descriptors_msg_5fnode_5fget_5fcharacter_2eproto, file_level_service_descriptors_msg_5fnode_5fget_5fcharacter_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_msg_5fnode_5fget_5fcharacter_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_msg_5fnode_5fget_5fcharacter_2eproto), true);
namespace node {

// ===================================================================

void GetCharacterRequest::InitAsDefaultInstance() {
}
class GetCharacterRequest::_Internal {
 public:
};

GetCharacterRequest::GetCharacterRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:node.GetCharacterRequest)
}
GetCharacterRequest::GetCharacterRequest(const GetCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kick_ = from.kick_;
  // @@protoc_insertion_point(copy_constructor:node.GetCharacterRequest)
}

void GetCharacterRequest::SharedCtor() {
  kick_ = false;
}

GetCharacterRequest::~GetCharacterRequest() {
  // @@protoc_insertion_point(destructor:node.GetCharacterRequest)
  SharedDtor();
}

void GetCharacterRequest::SharedDtor() {
}

void GetCharacterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCharacterRequest& GetCharacterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCharacterRequest_msg_5fnode_5fget_5fcharacter_2eproto.base);
  return *internal_default_instance();
}


void GetCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:node.GetCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kick_ = false;
  _internal_metadata_.Clear();
}

const char* GetCharacterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool kick = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          kick_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCharacterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:node.GetCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool kick = 1;
  if (this->kick() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_kick(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:node.GetCharacterRequest)
  return target;
}

size_t GetCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:node.GetCharacterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool kick = 1;
  if (this->kick() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCharacterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:node.GetCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCharacterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCharacterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:node.GetCharacterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:node.GetCharacterRequest)
    MergeFrom(*source);
  }
}

void GetCharacterRequest::MergeFrom(const GetCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:node.GetCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kick() != 0) {
    _internal_set_kick(from._internal_kick());
  }
}

void GetCharacterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:node.GetCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCharacterRequest::CopyFrom(const GetCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:node.GetCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCharacterRequest::IsInitialized() const {
  return true;
}

void GetCharacterRequest::InternalSwap(GetCharacterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(kick_, other->kick_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCharacterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetCharacterResponse::InitAsDefaultInstance() {
}
class GetCharacterResponse::_Internal {
 public:
};

GetCharacterResponse::GetCharacterResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:node.GetCharacterResponse)
}
GetCharacterResponse::GetCharacterResponse(const GetCharacterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_info().empty()) {
    info_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  cfgid_ = from.cfgid_;
  // @@protoc_insertion_point(copy_constructor:node.GetCharacterResponse)
}

void GetCharacterResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetCharacterResponse_msg_5fnode_5fget_5fcharacter_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cfgid_ = 0u;
}

GetCharacterResponse::~GetCharacterResponse() {
  // @@protoc_insertion_point(destructor:node.GetCharacterResponse)
  SharedDtor();
}

void GetCharacterResponse::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  info_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetCharacterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCharacterResponse& GetCharacterResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCharacterResponse_msg_5fnode_5fget_5fcharacter_2eproto.base);
  return *internal_default_instance();
}


void GetCharacterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:node.GetCharacterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  info_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cfgid_ = 0u;
  _internal_metadata_.Clear();
}

const char* GetCharacterResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 cfgid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          cfgid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "node.GetCharacterResponse.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_info();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCharacterResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:node.GetCharacterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cfgid = 1;
  if (this->cfgid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_cfgid(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "node.GetCharacterResponse.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // bytes info = 3;
  if (this->info().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_info(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:node.GetCharacterResponse)
  return target;
}

size_t GetCharacterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:node.GetCharacterResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes info = 3;
  if (this->info().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_info());
  }

  // uint32 cfgid = 1;
  if (this->cfgid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_cfgid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCharacterResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:node.GetCharacterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCharacterResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCharacterResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:node.GetCharacterResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:node.GetCharacterResponse)
    MergeFrom(*source);
  }
}

void GetCharacterResponse::MergeFrom(const GetCharacterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:node.GetCharacterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.info().size() > 0) {

    info_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  if (from.cfgid() != 0) {
    _internal_set_cfgid(from._internal_cfgid());
  }
}

void GetCharacterResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:node.GetCharacterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCharacterResponse::CopyFrom(const GetCharacterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:node.GetCharacterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCharacterResponse::IsInitialized() const {
  return true;
}

void GetCharacterResponse::InternalSwap(GetCharacterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  info_.Swap(&other->info_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cfgid_, other->cfgid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCharacterResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace node
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::node::GetCharacterRequest* Arena::CreateMaybeMessage< ::node::GetCharacterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::node::GetCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::node::GetCharacterResponse* Arena::CreateMaybeMessage< ::node::GetCharacterResponse >(Arena* arena) {
  return Arena::CreateInternal< ::node::GetCharacterResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
