// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_game_mail.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_msg_5fgame_5fmail_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_msg_5fgame_5fmail_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mail_packet.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_msg_5fgame_5fmail_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_msg_5fgame_5fmail_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[11]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_msg_5fgame_5fmail_2eproto;
namespace game {
class DelMailRequest;
class DelMailRequestDefaultTypeInternal;
extern DelMailRequestDefaultTypeInternal _DelMailRequest_default_instance_;
class DelMailResponse;
class DelMailResponseDefaultTypeInternal;
extern DelMailResponseDefaultTypeInternal _DelMailResponse_default_instance_;
class GetMailAttachmentRequest;
class GetMailAttachmentRequestDefaultTypeInternal;
extern GetMailAttachmentRequestDefaultTypeInternal _GetMailAttachmentRequest_default_instance_;
class GetMailAttachmentResponse;
class GetMailAttachmentResponseDefaultTypeInternal;
extern GetMailAttachmentResponseDefaultTypeInternal _GetMailAttachmentResponse_default_instance_;
class GetMailDetailRequest;
class GetMailDetailRequestDefaultTypeInternal;
extern GetMailDetailRequestDefaultTypeInternal _GetMailDetailRequest_default_instance_;
class GetMailDetailResponse;
class GetMailDetailResponseDefaultTypeInternal;
extern GetMailDetailResponseDefaultTypeInternal _GetMailDetailResponse_default_instance_;
class GetMailListRequest;
class GetMailListRequestDefaultTypeInternal;
extern GetMailListRequestDefaultTypeInternal _GetMailListRequest_default_instance_;
class GetMailListResponse;
class GetMailListResponseDefaultTypeInternal;
extern GetMailListResponseDefaultTypeInternal _GetMailListResponse_default_instance_;
class MailBriefPacket;
class MailBriefPacketDefaultTypeInternal;
extern MailBriefPacketDefaultTypeInternal _MailBriefPacket_default_instance_;
class NotifMailPacket;
class NotifMailPacketDefaultTypeInternal;
extern NotifMailPacketDefaultTypeInternal _NotifMailPacket_default_instance_;
class SendMailRequest;
class SendMailRequestDefaultTypeInternal;
extern SendMailRequestDefaultTypeInternal _SendMailRequest_default_instance_;
}  // namespace game
PROTOBUF_NAMESPACE_OPEN
template<> ::game::DelMailRequest* Arena::CreateMaybeMessage<::game::DelMailRequest>(Arena*);
template<> ::game::DelMailResponse* Arena::CreateMaybeMessage<::game::DelMailResponse>(Arena*);
template<> ::game::GetMailAttachmentRequest* Arena::CreateMaybeMessage<::game::GetMailAttachmentRequest>(Arena*);
template<> ::game::GetMailAttachmentResponse* Arena::CreateMaybeMessage<::game::GetMailAttachmentResponse>(Arena*);
template<> ::game::GetMailDetailRequest* Arena::CreateMaybeMessage<::game::GetMailDetailRequest>(Arena*);
template<> ::game::GetMailDetailResponse* Arena::CreateMaybeMessage<::game::GetMailDetailResponse>(Arena*);
template<> ::game::GetMailListRequest* Arena::CreateMaybeMessage<::game::GetMailListRequest>(Arena*);
template<> ::game::GetMailListResponse* Arena::CreateMaybeMessage<::game::GetMailListResponse>(Arena*);
template<> ::game::MailBriefPacket* Arena::CreateMaybeMessage<::game::MailBriefPacket>(Arena*);
template<> ::game::NotifMailPacket* Arena::CreateMaybeMessage<::game::NotifMailPacket>(Arena*);
template<> ::game::SendMailRequest* Arena::CreateMaybeMessage<::game::SendMailRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace game {

// ===================================================================

class MailBriefPacket :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:game.MailBriefPacket) */ {
 public:
  MailBriefPacket();
  virtual ~MailBriefPacket();

  MailBriefPacket(const MailBriefPacket& from);
  MailBriefPacket(MailBriefPacket&& from) noexcept
    : MailBriefPacket() {
    *this = ::std::move(from);
  }

  inline MailBriefPacket& operator=(const MailBriefPacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline MailBriefPacket& operator=(MailBriefPacket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MailBriefPacket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MailBriefPacket* internal_default_instance() {
    return reinterpret_cast<const MailBriefPacket*>(
               &_MailBriefPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MailBriefPacket& a, MailBriefPacket& b) {
    a.Swap(&b);
  }
  inline void Swap(MailBriefPacket* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MailBriefPacket* New() const final {
    return CreateMaybeMessage<MailBriefPacket>(nullptr);
  }

  MailBriefPacket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MailBriefPacket>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MailBriefPacket& from);
  void MergeFrom(const MailBriefPacket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MailBriefPacket* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "game.MailBriefPacket";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_5fgame_5fmail_2eproto);
    return ::descriptor_table_msg_5fgame_5fmail_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTitleFieldNumber = 5,
    kSenderFieldNumber = 3,
    kIndexFieldNumber = 1,
    kMailtypeFieldNumber = 2,
    kTitletypeFieldNumber = 4,
    kReadFieldNumber = 7,
    kSendtimeFieldNumber = 6,
  };
  // string title = 5;
  void clear_title();
  const std::string& title() const;
  void set_title(const std::string& value);
  void set_title(std::string&& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  std::string* mutable_title();
  std::string* release_title();
  void set_allocated_title(std::string* title);
  private:
  const std::string& _internal_title() const;
  void _internal_set_title(const std::string& value);
  std::string* _internal_mutable_title();
  public:

  // .game.MailCharacter sender = 3;
  bool has_sender() const;
  private:
  bool _internal_has_sender() const;
  public:
  void clear_sender();
  const ::game::MailCharacter& sender() const;
  ::game::MailCharacter* release_sender();
  ::game::MailCharacter* mutable_sender();
  void set_allocated_sender(::game::MailCharacter* sender);
  private:
  const ::game::MailCharacter& _internal_sender() const;
  ::game::MailCharacter* _internal_mutable_sender();
  public:

  // uint32 index = 1;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 mailtype = 2;
  void clear_mailtype();
  ::PROTOBUF_NAMESPACE_ID::int32 mailtype() const;
  void set_mailtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mailtype() const;
  void _internal_set_mailtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 titletype = 4;
  void clear_titletype();
  ::PROTOBUF_NAMESPACE_ID::int32 titletype() const;
  void set_titletype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_titletype() const;
  void _internal_set_titletype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 read = 7;
  void clear_read();
  ::PROTOBUF_NAMESPACE_ID::int32 read() const;
  void set_read(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_read() const;
  void _internal_set_read(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 sendtime = 6;
  void clear_sendtime();
  ::PROTOBUF_NAMESPACE_ID::uint64 sendtime() const;
  void set_sendtime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_sendtime() const;
  void _internal_set_sendtime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:game.MailBriefPacket)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr title_;
  ::game::MailCharacter* sender_;
  ::PROTOBUF_NAMESPACE_ID::uint32 index_;
  ::PROTOBUF_NAMESPACE_ID::int32 mailtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 titletype_;
  ::PROTOBUF_NAMESPACE_ID::int32 read_;
  ::PROTOBUF_NAMESPACE_ID::uint64 sendtime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fgame_5fmail_2eproto;
};
// -------------------------------------------------------------------

class SendMailRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:game.SendMailRequest) */ {
 public:
  SendMailRequest();
  virtual ~SendMailRequest();

  SendMailRequest(const SendMailRequest& from);
  SendMailRequest(SendMailRequest&& from) noexcept
    : SendMailRequest() {
    *this = ::std::move(from);
  }

  inline SendMailRequest& operator=(const SendMailRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendMailRequest& operator=(SendMailRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SendMailRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendMailRequest* internal_default_instance() {
    return reinterpret_cast<const SendMailRequest*>(
               &_SendMailRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SendMailRequest& a, SendMailRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SendMailRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SendMailRequest* New() const final {
    return CreateMaybeMessage<SendMailRequest>(nullptr);
  }

  SendMailRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SendMailRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SendMailRequest& from);
  void MergeFrom(const SendMailRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendMailRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "game.SendMailRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_5fgame_5fmail_2eproto);
    return ::descriptor_table_msg_5fgame_5fmail_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTitleFieldNumber = 3,
    kContentFieldNumber = 5,
    kAttachmentFieldNumber = 7,
    kReceiveridFieldNumber = 1,
    kTitletypeFieldNumber = 2,
    kContenttypeFieldNumber = 4,
    kAttachmenttypeFieldNumber = 6,
  };
  // string title = 3;
  void clear_title();
  const std::string& title() const;
  void set_title(const std::string& value);
  void set_title(std::string&& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  std::string* mutable_title();
  std::string* release_title();
  void set_allocated_title(std::string* title);
  private:
  const std::string& _internal_title() const;
  void _internal_set_title(const std::string& value);
  std::string* _internal_mutable_title();
  public:

  // bytes content = 5;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // bytes attachment = 7;
  void clear_attachment();
  const std::string& attachment() const;
  void set_attachment(const std::string& value);
  void set_attachment(std::string&& value);
  void set_attachment(const char* value);
  void set_attachment(const void* value, size_t size);
  std::string* mutable_attachment();
  std::string* release_attachment();
  void set_allocated_attachment(std::string* attachment);
  private:
  const std::string& _internal_attachment() const;
  void _internal_set_attachment(const std::string& value);
  std::string* _internal_mutable_attachment();
  public:

  // uint64 receiverid = 1;
  void clear_receiverid();
  ::PROTOBUF_NAMESPACE_ID::uint64 receiverid() const;
  void set_receiverid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_receiverid() const;
  void _internal_set_receiverid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 titletype = 2;
  void clear_titletype();
  ::PROTOBUF_NAMESPACE_ID::int32 titletype() const;
  void set_titletype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_titletype() const;
  void _internal_set_titletype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 contenttype = 4;
  void clear_contenttype();
  ::PROTOBUF_NAMESPACE_ID::int32 contenttype() const;
  void set_contenttype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_contenttype() const;
  void _internal_set_contenttype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 attachmenttype = 6;
  void clear_attachmenttype();
  ::PROTOBUF_NAMESPACE_ID::int32 attachmenttype() const;
  void set_attachmenttype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_attachmenttype() const;
  void _internal_set_attachmenttype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:game.SendMailRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr title_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr attachment_;
  ::PROTOBUF_NAMESPACE_ID::uint64 receiverid_;
  ::PROTOBUF_NAMESPACE_ID::int32 titletype_;
  ::PROTOBUF_NAMESPACE_ID::int32 contenttype_;
  ::PROTOBUF_NAMESPACE_ID::int32 attachmenttype_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fgame_5fmail_2eproto;
};
// -------------------------------------------------------------------

class NotifMailPacket :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:game.NotifMailPacket) */ {
 public:
  NotifMailPacket();
  virtual ~NotifMailPacket();

  NotifMailPacket(const NotifMailPacket& from);
  NotifMailPacket(NotifMailPacket&& from) noexcept
    : NotifMailPacket() {
    *this = ::std::move(from);
  }

  inline NotifMailPacket& operator=(const NotifMailPacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifMailPacket& operator=(NotifMailPacket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NotifMailPacket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NotifMailPacket* internal_default_instance() {
    return reinterpret_cast<const NotifMailPacket*>(
               &_NotifMailPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(NotifMailPacket& a, NotifMailPacket& b) {
    a.Swap(&b);
  }
  inline void Swap(NotifMailPacket* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NotifMailPacket* New() const final {
    return CreateMaybeMessage<NotifMailPacket>(nullptr);
  }

  NotifMailPacket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NotifMailPacket>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NotifMailPacket& from);
  void MergeFrom(const NotifMailPacket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NotifMailPacket* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "game.NotifMailPacket";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_5fgame_5fmail_2eproto);
    return ::descriptor_table_msg_5fgame_5fmail_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTitleFieldNumber = 3,
    kSenderFieldNumber = 2,
    kSendtimeFieldNumber = 4,
    kIndexFieldNumber = 1,
  };
  // string title = 3;
  void clear_title();
  const std::string& title() const;
  void set_title(const std::string& value);
  void set_title(std::string&& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  std::string* mutable_title();
  std::string* release_title();
  void set_allocated_title(std::string* title);
  private:
  const std::string& _internal_title() const;
  void _internal_set_title(const std::string& value);
  std::string* _internal_mutable_title();
  public:

  // .game.MailCharacter sender = 2;
  bool has_sender() const;
  private:
  bool _internal_has_sender() const;
  public:
  void clear_sender();
  const ::game::MailCharacter& sender() const;
  ::game::MailCharacter* release_sender();
  ::game::MailCharacter* mutable_sender();
  void set_allocated_sender(::game::MailCharacter* sender);
  private:
  const ::game::MailCharacter& _internal_sender() const;
  ::game::MailCharacter* _internal_mutable_sender();
  public:

  // uint64 sendtime = 4;
  void clear_sendtime();
  ::PROTOBUF_NAMESPACE_ID::uint64 sendtime() const;
  void set_sendtime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_sendtime() const;
  void _internal_set_sendtime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 index = 1;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:game.NotifMailPacket)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr title_;
  ::game::MailCharacter* sender_;
  ::PROTOBUF_NAMESPACE_ID::uint64 sendtime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fgame_5fmail_2eproto;
};
// -------------------------------------------------------------------

class GetMailListRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:game.GetMailListRequest) */ {
 public:
  GetMailListRequest();
  virtual ~GetMailListRequest();

  GetMailListRequest(const GetMailListRequest& from);
  GetMailListRequest(GetMailListRequest&& from) noexcept
    : GetMailListRequest() {
    *this = ::std::move(from);
  }

  inline GetMailListRequest& operator=(const GetMailListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMailListRequest& operator=(GetMailListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetMailListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMailListRequest* internal_default_instance() {
    return reinterpret_cast<const GetMailListRequest*>(
               &_GetMailListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetMailListRequest& a, GetMailListRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMailListRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetMailListRequest* New() const final {
    return CreateMaybeMessage<GetMailListRequest>(nullptr);
  }

  GetMailListRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetMailListRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetMailListRequest& from);
  void MergeFrom(const GetMailListRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMailListRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "game.GetMailListRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_5fgame_5fmail_2eproto);
    return ::descriptor_table_msg_5fgame_5fmail_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 1,
  };
  // uint32 page = 1;
  void clear_page();
  ::PROTOBUF_NAMESPACE_ID::uint32 page() const;
  void set_page(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_page() const;
  void _internal_set_page(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:game.GetMailListRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 page_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fgame_5fmail_2eproto;
};
// -------------------------------------------------------------------

class GetMailListResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:game.GetMailListResponse) */ {
 public:
  GetMailListResponse();
  virtual ~GetMailListResponse();

  GetMailListResponse(const GetMailListResponse& from);
  GetMailListResponse(GetMailListResponse&& from) noexcept
    : GetMailListResponse() {
    *this = ::std::move(from);
  }

  inline GetMailListResponse& operator=(const GetMailListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMailListResponse& operator=(GetMailListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetMailListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMailListResponse* internal_default_instance() {
    return reinterpret_cast<const GetMailListResponse*>(
               &_GetMailListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetMailListResponse& a, GetMailListResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMailListResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetMailListResponse* New() const final {
    return CreateMaybeMessage<GetMailListResponse>(nullptr);
  }

  GetMailListResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetMailListResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetMailListResponse& from);
  void MergeFrom(const GetMailListResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMailListResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "game.GetMailListResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_5fgame_5fmail_2eproto);
    return ::descriptor_table_msg_5fgame_5fmail_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMailsFieldNumber = 2,
    kPageFieldNumber = 1,
  };
  // repeated .game.MailBriefPacket mails = 2;
  int mails_size() const;
  private:
  int _internal_mails_size() const;
  public:
  void clear_mails();
  ::game::MailBriefPacket* mutable_mails(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::game::MailBriefPacket >*
      mutable_mails();
  private:
  const ::game::MailBriefPacket& _internal_mails(int index) const;
  ::game::MailBriefPacket* _internal_add_mails();
  public:
  const ::game::MailBriefPacket& mails(int index) const;
  ::game::MailBriefPacket* add_mails();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::game::MailBriefPacket >&
      mails() const;

  // uint32 page = 1;
  void clear_page();
  ::PROTOBUF_NAMESPACE_ID::uint32 page() const;
  void set_page(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_page() const;
  void _internal_set_page(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:game.GetMailListResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::game::MailBriefPacket > mails_;
  ::PROTOBUF_NAMESPACE_ID::uint32 page_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fgame_5fmail_2eproto;
};
// -------------------------------------------------------------------

class GetMailDetailRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:game.GetMailDetailRequest) */ {
 public:
  GetMailDetailRequest();
  virtual ~GetMailDetailRequest();

  GetMailDetailRequest(const GetMailDetailRequest& from);
  GetMailDetailRequest(GetMailDetailRequest&& from) noexcept
    : GetMailDetailRequest() {
    *this = ::std::move(from);
  }

  inline GetMailDetailRequest& operator=(const GetMailDetailRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMailDetailRequest& operator=(GetMailDetailRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetMailDetailRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMailDetailRequest* internal_default_instance() {
    return reinterpret_cast<const GetMailDetailRequest*>(
               &_GetMailDetailRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetMailDetailRequest& a, GetMailDetailRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMailDetailRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetMailDetailRequest* New() const final {
    return CreateMaybeMessage<GetMailDetailRequest>(nullptr);
  }

  GetMailDetailRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetMailDetailRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetMailDetailRequest& from);
  void MergeFrom(const GetMailDetailRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMailDetailRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "game.GetMailDetailRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_5fgame_5fmail_2eproto);
    return ::descriptor_table_msg_5fgame_5fmail_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
  };
  // uint32 index = 1;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:game.GetMailDetailRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fgame_5fmail_2eproto;
};
// -------------------------------------------------------------------

class GetMailDetailResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:game.GetMailDetailResponse) */ {
 public:
  GetMailDetailResponse();
  virtual ~GetMailDetailResponse();

  GetMailDetailResponse(const GetMailDetailResponse& from);
  GetMailDetailResponse(GetMailDetailResponse&& from) noexcept
    : GetMailDetailResponse() {
    *this = ::std::move(from);
  }

  inline GetMailDetailResponse& operator=(const GetMailDetailResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMailDetailResponse& operator=(GetMailDetailResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetMailDetailResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMailDetailResponse* internal_default_instance() {
    return reinterpret_cast<const GetMailDetailResponse*>(
               &_GetMailDetailResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetMailDetailResponse& a, GetMailDetailResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMailDetailResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetMailDetailResponse* New() const final {
    return CreateMaybeMessage<GetMailDetailResponse>(nullptr);
  }

  GetMailDetailResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetMailDetailResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetMailDetailResponse& from);
  void MergeFrom(const GetMailDetailResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMailDetailResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "game.GetMailDetailResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_5fgame_5fmail_2eproto);
    return ::descriptor_table_msg_5fgame_5fmail_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContentFieldNumber = 4,
    kAttachmentFieldNumber = 6,
    kIndexFieldNumber = 1,
    kMailtypeFieldNumber = 2,
    kContenttypeFieldNumber = 3,
    kAttachmenttypeFieldNumber = 5,
    kTakenFieldNumber = 7,
  };
  // bytes content = 4;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // bytes attachment = 6;
  void clear_attachment();
  const std::string& attachment() const;
  void set_attachment(const std::string& value);
  void set_attachment(std::string&& value);
  void set_attachment(const char* value);
  void set_attachment(const void* value, size_t size);
  std::string* mutable_attachment();
  std::string* release_attachment();
  void set_allocated_attachment(std::string* attachment);
  private:
  const std::string& _internal_attachment() const;
  void _internal_set_attachment(const std::string& value);
  std::string* _internal_mutable_attachment();
  public:

  // uint32 index = 1;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 mailtype = 2;
  void clear_mailtype();
  ::PROTOBUF_NAMESPACE_ID::int32 mailtype() const;
  void set_mailtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mailtype() const;
  void _internal_set_mailtype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 contenttype = 3;
  void clear_contenttype();
  ::PROTOBUF_NAMESPACE_ID::int32 contenttype() const;
  void set_contenttype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_contenttype() const;
  void _internal_set_contenttype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 attachmenttype = 5;
  void clear_attachmenttype();
  ::PROTOBUF_NAMESPACE_ID::int32 attachmenttype() const;
  void set_attachmenttype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_attachmenttype() const;
  void _internal_set_attachmenttype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 taken = 7;
  void clear_taken();
  ::PROTOBUF_NAMESPACE_ID::int32 taken() const;
  void set_taken(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_taken() const;
  void _internal_set_taken(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:game.GetMailDetailResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr attachment_;
  ::PROTOBUF_NAMESPACE_ID::uint32 index_;
  ::PROTOBUF_NAMESPACE_ID::int32 mailtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 contenttype_;
  ::PROTOBUF_NAMESPACE_ID::int32 attachmenttype_;
  ::PROTOBUF_NAMESPACE_ID::int32 taken_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fgame_5fmail_2eproto;
};
// -------------------------------------------------------------------

class GetMailAttachmentRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:game.GetMailAttachmentRequest) */ {
 public:
  GetMailAttachmentRequest();
  virtual ~GetMailAttachmentRequest();

  GetMailAttachmentRequest(const GetMailAttachmentRequest& from);
  GetMailAttachmentRequest(GetMailAttachmentRequest&& from) noexcept
    : GetMailAttachmentRequest() {
    *this = ::std::move(from);
  }

  inline GetMailAttachmentRequest& operator=(const GetMailAttachmentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMailAttachmentRequest& operator=(GetMailAttachmentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetMailAttachmentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMailAttachmentRequest* internal_default_instance() {
    return reinterpret_cast<const GetMailAttachmentRequest*>(
               &_GetMailAttachmentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GetMailAttachmentRequest& a, GetMailAttachmentRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMailAttachmentRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetMailAttachmentRequest* New() const final {
    return CreateMaybeMessage<GetMailAttachmentRequest>(nullptr);
  }

  GetMailAttachmentRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetMailAttachmentRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetMailAttachmentRequest& from);
  void MergeFrom(const GetMailAttachmentRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMailAttachmentRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "game.GetMailAttachmentRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_5fgame_5fmail_2eproto);
    return ::descriptor_table_msg_5fgame_5fmail_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
  };
  // uint32 index = 1;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:game.GetMailAttachmentRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fgame_5fmail_2eproto;
};
// -------------------------------------------------------------------

class GetMailAttachmentResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:game.GetMailAttachmentResponse) */ {
 public:
  GetMailAttachmentResponse();
  virtual ~GetMailAttachmentResponse();

  GetMailAttachmentResponse(const GetMailAttachmentResponse& from);
  GetMailAttachmentResponse(GetMailAttachmentResponse&& from) noexcept
    : GetMailAttachmentResponse() {
    *this = ::std::move(from);
  }

  inline GetMailAttachmentResponse& operator=(const GetMailAttachmentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMailAttachmentResponse& operator=(GetMailAttachmentResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetMailAttachmentResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMailAttachmentResponse* internal_default_instance() {
    return reinterpret_cast<const GetMailAttachmentResponse*>(
               &_GetMailAttachmentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GetMailAttachmentResponse& a, GetMailAttachmentResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMailAttachmentResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetMailAttachmentResponse* New() const final {
    return CreateMaybeMessage<GetMailAttachmentResponse>(nullptr);
  }

  GetMailAttachmentResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetMailAttachmentResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetMailAttachmentResponse& from);
  void MergeFrom(const GetMailAttachmentResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMailAttachmentResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "game.GetMailAttachmentResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_5fgame_5fmail_2eproto);
    return ::descriptor_table_msg_5fgame_5fmail_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
    kAttachmenttypeFieldNumber = 2,
  };
  // uint32 index = 1;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 attachmenttype = 2;
  void clear_attachmenttype();
  ::PROTOBUF_NAMESPACE_ID::int32 attachmenttype() const;
  void set_attachmenttype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_attachmenttype() const;
  void _internal_set_attachmenttype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:game.GetMailAttachmentResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 index_;
  ::PROTOBUF_NAMESPACE_ID::int32 attachmenttype_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fgame_5fmail_2eproto;
};
// -------------------------------------------------------------------

class DelMailRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:game.DelMailRequest) */ {
 public:
  DelMailRequest();
  virtual ~DelMailRequest();

  DelMailRequest(const DelMailRequest& from);
  DelMailRequest(DelMailRequest&& from) noexcept
    : DelMailRequest() {
    *this = ::std::move(from);
  }

  inline DelMailRequest& operator=(const DelMailRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DelMailRequest& operator=(DelMailRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DelMailRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DelMailRequest* internal_default_instance() {
    return reinterpret_cast<const DelMailRequest*>(
               &_DelMailRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(DelMailRequest& a, DelMailRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DelMailRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DelMailRequest* New() const final {
    return CreateMaybeMessage<DelMailRequest>(nullptr);
  }

  DelMailRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DelMailRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DelMailRequest& from);
  void MergeFrom(const DelMailRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DelMailRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "game.DelMailRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_5fgame_5fmail_2eproto);
    return ::descriptor_table_msg_5fgame_5fmail_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
  };
  // uint32 index = 1;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:game.DelMailRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fgame_5fmail_2eproto;
};
// -------------------------------------------------------------------

class DelMailResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:game.DelMailResponse) */ {
 public:
  DelMailResponse();
  virtual ~DelMailResponse();

  DelMailResponse(const DelMailResponse& from);
  DelMailResponse(DelMailResponse&& from) noexcept
    : DelMailResponse() {
    *this = ::std::move(from);
  }

  inline DelMailResponse& operator=(const DelMailResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DelMailResponse& operator=(DelMailResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DelMailResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DelMailResponse* internal_default_instance() {
    return reinterpret_cast<const DelMailResponse*>(
               &_DelMailResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(DelMailResponse& a, DelMailResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DelMailResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DelMailResponse* New() const final {
    return CreateMaybeMessage<DelMailResponse>(nullptr);
  }

  DelMailResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DelMailResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DelMailResponse& from);
  void MergeFrom(const DelMailResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DelMailResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "game.DelMailResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_5fgame_5fmail_2eproto);
    return ::descriptor_table_msg_5fgame_5fmail_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
  };
  // uint32 index = 1;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:game.DelMailResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fgame_5fmail_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MailBriefPacket

// uint32 index = 1;
inline void MailBriefPacket::clear_index() {
  index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MailBriefPacket::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MailBriefPacket::index() const {
  // @@protoc_insertion_point(field_get:game.MailBriefPacket.index)
  return _internal_index();
}
inline void MailBriefPacket::_internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  index_ = value;
}
inline void MailBriefPacket::set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:game.MailBriefPacket.index)
}

// int32 mailtype = 2;
inline void MailBriefPacket::clear_mailtype() {
  mailtype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MailBriefPacket::_internal_mailtype() const {
  return mailtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MailBriefPacket::mailtype() const {
  // @@protoc_insertion_point(field_get:game.MailBriefPacket.mailtype)
  return _internal_mailtype();
}
inline void MailBriefPacket::_internal_set_mailtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mailtype_ = value;
}
inline void MailBriefPacket::set_mailtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mailtype(value);
  // @@protoc_insertion_point(field_set:game.MailBriefPacket.mailtype)
}

// .game.MailCharacter sender = 3;
inline bool MailBriefPacket::_internal_has_sender() const {
  return this != internal_default_instance() && sender_ != nullptr;
}
inline bool MailBriefPacket::has_sender() const {
  return _internal_has_sender();
}
inline const ::game::MailCharacter& MailBriefPacket::_internal_sender() const {
  const ::game::MailCharacter* p = sender_;
  return p != nullptr ? *p : *reinterpret_cast<const ::game::MailCharacter*>(
      &::game::_MailCharacter_default_instance_);
}
inline const ::game::MailCharacter& MailBriefPacket::sender() const {
  // @@protoc_insertion_point(field_get:game.MailBriefPacket.sender)
  return _internal_sender();
}
inline ::game::MailCharacter* MailBriefPacket::release_sender() {
  // @@protoc_insertion_point(field_release:game.MailBriefPacket.sender)
  
  ::game::MailCharacter* temp = sender_;
  sender_ = nullptr;
  return temp;
}
inline ::game::MailCharacter* MailBriefPacket::_internal_mutable_sender() {
  
  if (sender_ == nullptr) {
    auto* p = CreateMaybeMessage<::game::MailCharacter>(GetArenaNoVirtual());
    sender_ = p;
  }
  return sender_;
}
inline ::game::MailCharacter* MailBriefPacket::mutable_sender() {
  // @@protoc_insertion_point(field_mutable:game.MailBriefPacket.sender)
  return _internal_mutable_sender();
}
inline void MailBriefPacket::set_allocated_sender(::game::MailCharacter* sender) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sender_);
  }
  if (sender) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      sender = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sender, submessage_arena);
    }
    
  } else {
    
  }
  sender_ = sender;
  // @@protoc_insertion_point(field_set_allocated:game.MailBriefPacket.sender)
}

// int32 titletype = 4;
inline void MailBriefPacket::clear_titletype() {
  titletype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MailBriefPacket::_internal_titletype() const {
  return titletype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MailBriefPacket::titletype() const {
  // @@protoc_insertion_point(field_get:game.MailBriefPacket.titletype)
  return _internal_titletype();
}
inline void MailBriefPacket::_internal_set_titletype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  titletype_ = value;
}
inline void MailBriefPacket::set_titletype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_titletype(value);
  // @@protoc_insertion_point(field_set:game.MailBriefPacket.titletype)
}

// string title = 5;
inline void MailBriefPacket::clear_title() {
  title_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MailBriefPacket::title() const {
  // @@protoc_insertion_point(field_get:game.MailBriefPacket.title)
  return _internal_title();
}
inline void MailBriefPacket::set_title(const std::string& value) {
  _internal_set_title(value);
  // @@protoc_insertion_point(field_set:game.MailBriefPacket.title)
}
inline std::string* MailBriefPacket::mutable_title() {
  // @@protoc_insertion_point(field_mutable:game.MailBriefPacket.title)
  return _internal_mutable_title();
}
inline const std::string& MailBriefPacket::_internal_title() const {
  return title_.GetNoArena();
}
inline void MailBriefPacket::_internal_set_title(const std::string& value) {
  
  title_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MailBriefPacket::set_title(std::string&& value) {
  
  title_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:game.MailBriefPacket.title)
}
inline void MailBriefPacket::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  title_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:game.MailBriefPacket.title)
}
inline void MailBriefPacket::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:game.MailBriefPacket.title)
}
inline std::string* MailBriefPacket::_internal_mutable_title() {
  
  return title_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MailBriefPacket::release_title() {
  // @@protoc_insertion_point(field_release:game.MailBriefPacket.title)
  
  return title_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MailBriefPacket::set_allocated_title(std::string* title) {
  if (title != nullptr) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:game.MailBriefPacket.title)
}

// uint64 sendtime = 6;
inline void MailBriefPacket::clear_sendtime() {
  sendtime_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MailBriefPacket::_internal_sendtime() const {
  return sendtime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MailBriefPacket::sendtime() const {
  // @@protoc_insertion_point(field_get:game.MailBriefPacket.sendtime)
  return _internal_sendtime();
}
inline void MailBriefPacket::_internal_set_sendtime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  sendtime_ = value;
}
inline void MailBriefPacket::set_sendtime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_sendtime(value);
  // @@protoc_insertion_point(field_set:game.MailBriefPacket.sendtime)
}

// int32 read = 7;
inline void MailBriefPacket::clear_read() {
  read_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MailBriefPacket::_internal_read() const {
  return read_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MailBriefPacket::read() const {
  // @@protoc_insertion_point(field_get:game.MailBriefPacket.read)
  return _internal_read();
}
inline void MailBriefPacket::_internal_set_read(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  read_ = value;
}
inline void MailBriefPacket::set_read(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_read(value);
  // @@protoc_insertion_point(field_set:game.MailBriefPacket.read)
}

// -------------------------------------------------------------------

// SendMailRequest

// uint64 receiverid = 1;
inline void SendMailRequest::clear_receiverid() {
  receiverid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SendMailRequest::_internal_receiverid() const {
  return receiverid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SendMailRequest::receiverid() const {
  // @@protoc_insertion_point(field_get:game.SendMailRequest.receiverid)
  return _internal_receiverid();
}
inline void SendMailRequest::_internal_set_receiverid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  receiverid_ = value;
}
inline void SendMailRequest::set_receiverid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_receiverid(value);
  // @@protoc_insertion_point(field_set:game.SendMailRequest.receiverid)
}

// int32 titletype = 2;
inline void SendMailRequest::clear_titletype() {
  titletype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SendMailRequest::_internal_titletype() const {
  return titletype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SendMailRequest::titletype() const {
  // @@protoc_insertion_point(field_get:game.SendMailRequest.titletype)
  return _internal_titletype();
}
inline void SendMailRequest::_internal_set_titletype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  titletype_ = value;
}
inline void SendMailRequest::set_titletype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_titletype(value);
  // @@protoc_insertion_point(field_set:game.SendMailRequest.titletype)
}

// string title = 3;
inline void SendMailRequest::clear_title() {
  title_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SendMailRequest::title() const {
  // @@protoc_insertion_point(field_get:game.SendMailRequest.title)
  return _internal_title();
}
inline void SendMailRequest::set_title(const std::string& value) {
  _internal_set_title(value);
  // @@protoc_insertion_point(field_set:game.SendMailRequest.title)
}
inline std::string* SendMailRequest::mutable_title() {
  // @@protoc_insertion_point(field_mutable:game.SendMailRequest.title)
  return _internal_mutable_title();
}
inline const std::string& SendMailRequest::_internal_title() const {
  return title_.GetNoArena();
}
inline void SendMailRequest::_internal_set_title(const std::string& value) {
  
  title_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SendMailRequest::set_title(std::string&& value) {
  
  title_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:game.SendMailRequest.title)
}
inline void SendMailRequest::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  title_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:game.SendMailRequest.title)
}
inline void SendMailRequest::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:game.SendMailRequest.title)
}
inline std::string* SendMailRequest::_internal_mutable_title() {
  
  return title_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SendMailRequest::release_title() {
  // @@protoc_insertion_point(field_release:game.SendMailRequest.title)
  
  return title_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SendMailRequest::set_allocated_title(std::string* title) {
  if (title != nullptr) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:game.SendMailRequest.title)
}

// int32 contenttype = 4;
inline void SendMailRequest::clear_contenttype() {
  contenttype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SendMailRequest::_internal_contenttype() const {
  return contenttype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SendMailRequest::contenttype() const {
  // @@protoc_insertion_point(field_get:game.SendMailRequest.contenttype)
  return _internal_contenttype();
}
inline void SendMailRequest::_internal_set_contenttype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  contenttype_ = value;
}
inline void SendMailRequest::set_contenttype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_contenttype(value);
  // @@protoc_insertion_point(field_set:game.SendMailRequest.contenttype)
}

// bytes content = 5;
inline void SendMailRequest::clear_content() {
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SendMailRequest::content() const {
  // @@protoc_insertion_point(field_get:game.SendMailRequest.content)
  return _internal_content();
}
inline void SendMailRequest::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:game.SendMailRequest.content)
}
inline std::string* SendMailRequest::mutable_content() {
  // @@protoc_insertion_point(field_mutable:game.SendMailRequest.content)
  return _internal_mutable_content();
}
inline const std::string& SendMailRequest::_internal_content() const {
  return content_.GetNoArena();
}
inline void SendMailRequest::_internal_set_content(const std::string& value) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SendMailRequest::set_content(std::string&& value) {
  
  content_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:game.SendMailRequest.content)
}
inline void SendMailRequest::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:game.SendMailRequest.content)
}
inline void SendMailRequest::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:game.SendMailRequest.content)
}
inline std::string* SendMailRequest::_internal_mutable_content() {
  
  return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SendMailRequest::release_content() {
  // @@protoc_insertion_point(field_release:game.SendMailRequest.content)
  
  return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SendMailRequest::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:game.SendMailRequest.content)
}

// int32 attachmenttype = 6;
inline void SendMailRequest::clear_attachmenttype() {
  attachmenttype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SendMailRequest::_internal_attachmenttype() const {
  return attachmenttype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SendMailRequest::attachmenttype() const {
  // @@protoc_insertion_point(field_get:game.SendMailRequest.attachmenttype)
  return _internal_attachmenttype();
}
inline void SendMailRequest::_internal_set_attachmenttype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  attachmenttype_ = value;
}
inline void SendMailRequest::set_attachmenttype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_attachmenttype(value);
  // @@protoc_insertion_point(field_set:game.SendMailRequest.attachmenttype)
}

// bytes attachment = 7;
inline void SendMailRequest::clear_attachment() {
  attachment_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SendMailRequest::attachment() const {
  // @@protoc_insertion_point(field_get:game.SendMailRequest.attachment)
  return _internal_attachment();
}
inline void SendMailRequest::set_attachment(const std::string& value) {
  _internal_set_attachment(value);
  // @@protoc_insertion_point(field_set:game.SendMailRequest.attachment)
}
inline std::string* SendMailRequest::mutable_attachment() {
  // @@protoc_insertion_point(field_mutable:game.SendMailRequest.attachment)
  return _internal_mutable_attachment();
}
inline const std::string& SendMailRequest::_internal_attachment() const {
  return attachment_.GetNoArena();
}
inline void SendMailRequest::_internal_set_attachment(const std::string& value) {
  
  attachment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SendMailRequest::set_attachment(std::string&& value) {
  
  attachment_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:game.SendMailRequest.attachment)
}
inline void SendMailRequest::set_attachment(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  attachment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:game.SendMailRequest.attachment)
}
inline void SendMailRequest::set_attachment(const void* value, size_t size) {
  
  attachment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:game.SendMailRequest.attachment)
}
inline std::string* SendMailRequest::_internal_mutable_attachment() {
  
  return attachment_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SendMailRequest::release_attachment() {
  // @@protoc_insertion_point(field_release:game.SendMailRequest.attachment)
  
  return attachment_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SendMailRequest::set_allocated_attachment(std::string* attachment) {
  if (attachment != nullptr) {
    
  } else {
    
  }
  attachment_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), attachment);
  // @@protoc_insertion_point(field_set_allocated:game.SendMailRequest.attachment)
}

// -------------------------------------------------------------------

// NotifMailPacket

// uint32 index = 1;
inline void NotifMailPacket::clear_index() {
  index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NotifMailPacket::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NotifMailPacket::index() const {
  // @@protoc_insertion_point(field_get:game.NotifMailPacket.index)
  return _internal_index();
}
inline void NotifMailPacket::_internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  index_ = value;
}
inline void NotifMailPacket::set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:game.NotifMailPacket.index)
}

// .game.MailCharacter sender = 2;
inline bool NotifMailPacket::_internal_has_sender() const {
  return this != internal_default_instance() && sender_ != nullptr;
}
inline bool NotifMailPacket::has_sender() const {
  return _internal_has_sender();
}
inline const ::game::MailCharacter& NotifMailPacket::_internal_sender() const {
  const ::game::MailCharacter* p = sender_;
  return p != nullptr ? *p : *reinterpret_cast<const ::game::MailCharacter*>(
      &::game::_MailCharacter_default_instance_);
}
inline const ::game::MailCharacter& NotifMailPacket::sender() const {
  // @@protoc_insertion_point(field_get:game.NotifMailPacket.sender)
  return _internal_sender();
}
inline ::game::MailCharacter* NotifMailPacket::release_sender() {
  // @@protoc_insertion_point(field_release:game.NotifMailPacket.sender)
  
  ::game::MailCharacter* temp = sender_;
  sender_ = nullptr;
  return temp;
}
inline ::game::MailCharacter* NotifMailPacket::_internal_mutable_sender() {
  
  if (sender_ == nullptr) {
    auto* p = CreateMaybeMessage<::game::MailCharacter>(GetArenaNoVirtual());
    sender_ = p;
  }
  return sender_;
}
inline ::game::MailCharacter* NotifMailPacket::mutable_sender() {
  // @@protoc_insertion_point(field_mutable:game.NotifMailPacket.sender)
  return _internal_mutable_sender();
}
inline void NotifMailPacket::set_allocated_sender(::game::MailCharacter* sender) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sender_);
  }
  if (sender) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      sender = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sender, submessage_arena);
    }
    
  } else {
    
  }
  sender_ = sender;
  // @@protoc_insertion_point(field_set_allocated:game.NotifMailPacket.sender)
}

// string title = 3;
inline void NotifMailPacket::clear_title() {
  title_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& NotifMailPacket::title() const {
  // @@protoc_insertion_point(field_get:game.NotifMailPacket.title)
  return _internal_title();
}
inline void NotifMailPacket::set_title(const std::string& value) {
  _internal_set_title(value);
  // @@protoc_insertion_point(field_set:game.NotifMailPacket.title)
}
inline std::string* NotifMailPacket::mutable_title() {
  // @@protoc_insertion_point(field_mutable:game.NotifMailPacket.title)
  return _internal_mutable_title();
}
inline const std::string& NotifMailPacket::_internal_title() const {
  return title_.GetNoArena();
}
inline void NotifMailPacket::_internal_set_title(const std::string& value) {
  
  title_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void NotifMailPacket::set_title(std::string&& value) {
  
  title_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:game.NotifMailPacket.title)
}
inline void NotifMailPacket::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  title_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:game.NotifMailPacket.title)
}
inline void NotifMailPacket::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:game.NotifMailPacket.title)
}
inline std::string* NotifMailPacket::_internal_mutable_title() {
  
  return title_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* NotifMailPacket::release_title() {
  // @@protoc_insertion_point(field_release:game.NotifMailPacket.title)
  
  return title_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void NotifMailPacket::set_allocated_title(std::string* title) {
  if (title != nullptr) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:game.NotifMailPacket.title)
}

// uint64 sendtime = 4;
inline void NotifMailPacket::clear_sendtime() {
  sendtime_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 NotifMailPacket::_internal_sendtime() const {
  return sendtime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 NotifMailPacket::sendtime() const {
  // @@protoc_insertion_point(field_get:game.NotifMailPacket.sendtime)
  return _internal_sendtime();
}
inline void NotifMailPacket::_internal_set_sendtime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  sendtime_ = value;
}
inline void NotifMailPacket::set_sendtime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_sendtime(value);
  // @@protoc_insertion_point(field_set:game.NotifMailPacket.sendtime)
}

// -------------------------------------------------------------------

// GetMailListRequest

// uint32 page = 1;
inline void GetMailListRequest::clear_page() {
  page_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetMailListRequest::_internal_page() const {
  return page_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetMailListRequest::page() const {
  // @@protoc_insertion_point(field_get:game.GetMailListRequest.page)
  return _internal_page();
}
inline void GetMailListRequest::_internal_set_page(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  page_ = value;
}
inline void GetMailListRequest::set_page(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:game.GetMailListRequest.page)
}

// -------------------------------------------------------------------

// GetMailListResponse

// uint32 page = 1;
inline void GetMailListResponse::clear_page() {
  page_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetMailListResponse::_internal_page() const {
  return page_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetMailListResponse::page() const {
  // @@protoc_insertion_point(field_get:game.GetMailListResponse.page)
  return _internal_page();
}
inline void GetMailListResponse::_internal_set_page(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  page_ = value;
}
inline void GetMailListResponse::set_page(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:game.GetMailListResponse.page)
}

// repeated .game.MailBriefPacket mails = 2;
inline int GetMailListResponse::_internal_mails_size() const {
  return mails_.size();
}
inline int GetMailListResponse::mails_size() const {
  return _internal_mails_size();
}
inline void GetMailListResponse::clear_mails() {
  mails_.Clear();
}
inline ::game::MailBriefPacket* GetMailListResponse::mutable_mails(int index) {
  // @@protoc_insertion_point(field_mutable:game.GetMailListResponse.mails)
  return mails_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::game::MailBriefPacket >*
GetMailListResponse::mutable_mails() {
  // @@protoc_insertion_point(field_mutable_list:game.GetMailListResponse.mails)
  return &mails_;
}
inline const ::game::MailBriefPacket& GetMailListResponse::_internal_mails(int index) const {
  return mails_.Get(index);
}
inline const ::game::MailBriefPacket& GetMailListResponse::mails(int index) const {
  // @@protoc_insertion_point(field_get:game.GetMailListResponse.mails)
  return _internal_mails(index);
}
inline ::game::MailBriefPacket* GetMailListResponse::_internal_add_mails() {
  return mails_.Add();
}
inline ::game::MailBriefPacket* GetMailListResponse::add_mails() {
  // @@protoc_insertion_point(field_add:game.GetMailListResponse.mails)
  return _internal_add_mails();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::game::MailBriefPacket >&
GetMailListResponse::mails() const {
  // @@protoc_insertion_point(field_list:game.GetMailListResponse.mails)
  return mails_;
}

// -------------------------------------------------------------------

// GetMailDetailRequest

// uint32 index = 1;
inline void GetMailDetailRequest::clear_index() {
  index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetMailDetailRequest::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetMailDetailRequest::index() const {
  // @@protoc_insertion_point(field_get:game.GetMailDetailRequest.index)
  return _internal_index();
}
inline void GetMailDetailRequest::_internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  index_ = value;
}
inline void GetMailDetailRequest::set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:game.GetMailDetailRequest.index)
}

// -------------------------------------------------------------------

// GetMailDetailResponse

// uint32 index = 1;
inline void GetMailDetailResponse::clear_index() {
  index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetMailDetailResponse::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetMailDetailResponse::index() const {
  // @@protoc_insertion_point(field_get:game.GetMailDetailResponse.index)
  return _internal_index();
}
inline void GetMailDetailResponse::_internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  index_ = value;
}
inline void GetMailDetailResponse::set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:game.GetMailDetailResponse.index)
}

// int32 mailtype = 2;
inline void GetMailDetailResponse::clear_mailtype() {
  mailtype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetMailDetailResponse::_internal_mailtype() const {
  return mailtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetMailDetailResponse::mailtype() const {
  // @@protoc_insertion_point(field_get:game.GetMailDetailResponse.mailtype)
  return _internal_mailtype();
}
inline void GetMailDetailResponse::_internal_set_mailtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mailtype_ = value;
}
inline void GetMailDetailResponse::set_mailtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mailtype(value);
  // @@protoc_insertion_point(field_set:game.GetMailDetailResponse.mailtype)
}

// int32 contenttype = 3;
inline void GetMailDetailResponse::clear_contenttype() {
  contenttype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetMailDetailResponse::_internal_contenttype() const {
  return contenttype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetMailDetailResponse::contenttype() const {
  // @@protoc_insertion_point(field_get:game.GetMailDetailResponse.contenttype)
  return _internal_contenttype();
}
inline void GetMailDetailResponse::_internal_set_contenttype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  contenttype_ = value;
}
inline void GetMailDetailResponse::set_contenttype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_contenttype(value);
  // @@protoc_insertion_point(field_set:game.GetMailDetailResponse.contenttype)
}

// bytes content = 4;
inline void GetMailDetailResponse::clear_content() {
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GetMailDetailResponse::content() const {
  // @@protoc_insertion_point(field_get:game.GetMailDetailResponse.content)
  return _internal_content();
}
inline void GetMailDetailResponse::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:game.GetMailDetailResponse.content)
}
inline std::string* GetMailDetailResponse::mutable_content() {
  // @@protoc_insertion_point(field_mutable:game.GetMailDetailResponse.content)
  return _internal_mutable_content();
}
inline const std::string& GetMailDetailResponse::_internal_content() const {
  return content_.GetNoArena();
}
inline void GetMailDetailResponse::_internal_set_content(const std::string& value) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GetMailDetailResponse::set_content(std::string&& value) {
  
  content_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:game.GetMailDetailResponse.content)
}
inline void GetMailDetailResponse::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:game.GetMailDetailResponse.content)
}
inline void GetMailDetailResponse::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:game.GetMailDetailResponse.content)
}
inline std::string* GetMailDetailResponse::_internal_mutable_content() {
  
  return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GetMailDetailResponse::release_content() {
  // @@protoc_insertion_point(field_release:game.GetMailDetailResponse.content)
  
  return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GetMailDetailResponse::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:game.GetMailDetailResponse.content)
}

// int32 attachmenttype = 5;
inline void GetMailDetailResponse::clear_attachmenttype() {
  attachmenttype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetMailDetailResponse::_internal_attachmenttype() const {
  return attachmenttype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetMailDetailResponse::attachmenttype() const {
  // @@protoc_insertion_point(field_get:game.GetMailDetailResponse.attachmenttype)
  return _internal_attachmenttype();
}
inline void GetMailDetailResponse::_internal_set_attachmenttype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  attachmenttype_ = value;
}
inline void GetMailDetailResponse::set_attachmenttype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_attachmenttype(value);
  // @@protoc_insertion_point(field_set:game.GetMailDetailResponse.attachmenttype)
}

// bytes attachment = 6;
inline void GetMailDetailResponse::clear_attachment() {
  attachment_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GetMailDetailResponse::attachment() const {
  // @@protoc_insertion_point(field_get:game.GetMailDetailResponse.attachment)
  return _internal_attachment();
}
inline void GetMailDetailResponse::set_attachment(const std::string& value) {
  _internal_set_attachment(value);
  // @@protoc_insertion_point(field_set:game.GetMailDetailResponse.attachment)
}
inline std::string* GetMailDetailResponse::mutable_attachment() {
  // @@protoc_insertion_point(field_mutable:game.GetMailDetailResponse.attachment)
  return _internal_mutable_attachment();
}
inline const std::string& GetMailDetailResponse::_internal_attachment() const {
  return attachment_.GetNoArena();
}
inline void GetMailDetailResponse::_internal_set_attachment(const std::string& value) {
  
  attachment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GetMailDetailResponse::set_attachment(std::string&& value) {
  
  attachment_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:game.GetMailDetailResponse.attachment)
}
inline void GetMailDetailResponse::set_attachment(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  attachment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:game.GetMailDetailResponse.attachment)
}
inline void GetMailDetailResponse::set_attachment(const void* value, size_t size) {
  
  attachment_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:game.GetMailDetailResponse.attachment)
}
inline std::string* GetMailDetailResponse::_internal_mutable_attachment() {
  
  return attachment_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GetMailDetailResponse::release_attachment() {
  // @@protoc_insertion_point(field_release:game.GetMailDetailResponse.attachment)
  
  return attachment_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GetMailDetailResponse::set_allocated_attachment(std::string* attachment) {
  if (attachment != nullptr) {
    
  } else {
    
  }
  attachment_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), attachment);
  // @@protoc_insertion_point(field_set_allocated:game.GetMailDetailResponse.attachment)
}

// int32 taken = 7;
inline void GetMailDetailResponse::clear_taken() {
  taken_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetMailDetailResponse::_internal_taken() const {
  return taken_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetMailDetailResponse::taken() const {
  // @@protoc_insertion_point(field_get:game.GetMailDetailResponse.taken)
  return _internal_taken();
}
inline void GetMailDetailResponse::_internal_set_taken(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  taken_ = value;
}
inline void GetMailDetailResponse::set_taken(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_taken(value);
  // @@protoc_insertion_point(field_set:game.GetMailDetailResponse.taken)
}

// -------------------------------------------------------------------

// GetMailAttachmentRequest

// uint32 index = 1;
inline void GetMailAttachmentRequest::clear_index() {
  index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetMailAttachmentRequest::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetMailAttachmentRequest::index() const {
  // @@protoc_insertion_point(field_get:game.GetMailAttachmentRequest.index)
  return _internal_index();
}
inline void GetMailAttachmentRequest::_internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  index_ = value;
}
inline void GetMailAttachmentRequest::set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:game.GetMailAttachmentRequest.index)
}

// -------------------------------------------------------------------

// GetMailAttachmentResponse

// uint32 index = 1;
inline void GetMailAttachmentResponse::clear_index() {
  index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetMailAttachmentResponse::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetMailAttachmentResponse::index() const {
  // @@protoc_insertion_point(field_get:game.GetMailAttachmentResponse.index)
  return _internal_index();
}
inline void GetMailAttachmentResponse::_internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  index_ = value;
}
inline void GetMailAttachmentResponse::set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:game.GetMailAttachmentResponse.index)
}

// int32 attachmenttype = 2;
inline void GetMailAttachmentResponse::clear_attachmenttype() {
  attachmenttype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetMailAttachmentResponse::_internal_attachmenttype() const {
  return attachmenttype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetMailAttachmentResponse::attachmenttype() const {
  // @@protoc_insertion_point(field_get:game.GetMailAttachmentResponse.attachmenttype)
  return _internal_attachmenttype();
}
inline void GetMailAttachmentResponse::_internal_set_attachmenttype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  attachmenttype_ = value;
}
inline void GetMailAttachmentResponse::set_attachmenttype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_attachmenttype(value);
  // @@protoc_insertion_point(field_set:game.GetMailAttachmentResponse.attachmenttype)
}

// -------------------------------------------------------------------

// DelMailRequest

// uint32 index = 1;
inline void DelMailRequest::clear_index() {
  index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DelMailRequest::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DelMailRequest::index() const {
  // @@protoc_insertion_point(field_get:game.DelMailRequest.index)
  return _internal_index();
}
inline void DelMailRequest::_internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  index_ = value;
}
inline void DelMailRequest::set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:game.DelMailRequest.index)
}

// -------------------------------------------------------------------

// DelMailResponse

// uint32 index = 1;
inline void DelMailResponse::clear_index() {
  index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DelMailResponse::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DelMailResponse::index() const {
  // @@protoc_insertion_point(field_get:game.DelMailResponse.index)
  return _internal_index();
}
inline void DelMailResponse::_internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  index_ = value;
}
inline void DelMailResponse::set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:game.DelMailResponse.index)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace game

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_msg_5fgame_5fmail_2eproto
