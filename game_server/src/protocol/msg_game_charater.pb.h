// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_game_charater.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_msg_5fgame_5fcharater_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_msg_5fgame_5fcharater_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_msg_5fgame_5fcharater_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_msg_5fgame_5fcharater_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_msg_5fgame_5fcharater_2eproto;
namespace game {
class CharaterInfoRequest;
class CharaterInfoRequestDefaultTypeInternal;
extern CharaterInfoRequestDefaultTypeInternal _CharaterInfoRequest_default_instance_;
class CharaterInfoResponse;
class CharaterInfoResponseDefaultTypeInternal;
extern CharaterInfoResponseDefaultTypeInternal _CharaterInfoResponse_default_instance_;
}  // namespace game
PROTOBUF_NAMESPACE_OPEN
template<> ::game::CharaterInfoRequest* Arena::CreateMaybeMessage<::game::CharaterInfoRequest>(Arena*);
template<> ::game::CharaterInfoResponse* Arena::CreateMaybeMessage<::game::CharaterInfoResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace game {

// ===================================================================

class CharaterInfoRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:game.CharaterInfoRequest) */ {
 public:
  CharaterInfoRequest();
  virtual ~CharaterInfoRequest();

  CharaterInfoRequest(const CharaterInfoRequest& from);
  CharaterInfoRequest(CharaterInfoRequest&& from) noexcept
    : CharaterInfoRequest() {
    *this = ::std::move(from);
  }

  inline CharaterInfoRequest& operator=(const CharaterInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CharaterInfoRequest& operator=(CharaterInfoRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CharaterInfoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CharaterInfoRequest* internal_default_instance() {
    return reinterpret_cast<const CharaterInfoRequest*>(
               &_CharaterInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CharaterInfoRequest& a, CharaterInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CharaterInfoRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CharaterInfoRequest* New() const final {
    return CreateMaybeMessage<CharaterInfoRequest>(nullptr);
  }

  CharaterInfoRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CharaterInfoRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CharaterInfoRequest& from);
  void MergeFrom(const CharaterInfoRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CharaterInfoRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "game.CharaterInfoRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_5fgame_5fcharater_2eproto);
    return ::descriptor_table_msg_5fgame_5fcharater_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUseridFieldNumber = 1,
  };
  // uint64 userid = 1;
  void clear_userid();
  ::PROTOBUF_NAMESPACE_ID::uint64 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_userid() const;
  void _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:game.CharaterInfoRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 userid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fgame_5fcharater_2eproto;
};
// -------------------------------------------------------------------

class CharaterInfoResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:game.CharaterInfoResponse) */ {
 public:
  CharaterInfoResponse();
  virtual ~CharaterInfoResponse();

  CharaterInfoResponse(const CharaterInfoResponse& from);
  CharaterInfoResponse(CharaterInfoResponse&& from) noexcept
    : CharaterInfoResponse() {
    *this = ::std::move(from);
  }

  inline CharaterInfoResponse& operator=(const CharaterInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CharaterInfoResponse& operator=(CharaterInfoResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CharaterInfoResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CharaterInfoResponse* internal_default_instance() {
    return reinterpret_cast<const CharaterInfoResponse*>(
               &_CharaterInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CharaterInfoResponse& a, CharaterInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CharaterInfoResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CharaterInfoResponse* New() const final {
    return CreateMaybeMessage<CharaterInfoResponse>(nullptr);
  }

  CharaterInfoResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CharaterInfoResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CharaterInfoResponse& from);
  void MergeFrom(const CharaterInfoResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CharaterInfoResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "game.CharaterInfoResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_5fgame_5fcharater_2eproto);
    return ::descriptor_table_msg_5fgame_5fcharater_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNicknameFieldNumber = 3,
    kUseridFieldNumber = 1,
    kRolecfgidFieldNumber = 2,
    kLevelFieldNumber = 4,
    kGameunionFieldNumber = 6,
    kExpFieldNumber = 5,
  };
  // string nickname = 3;
  void clear_nickname();
  const std::string& nickname() const;
  void set_nickname(const std::string& value);
  void set_nickname(std::string&& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  std::string* mutable_nickname();
  std::string* release_nickname();
  void set_allocated_nickname(std::string* nickname);
  private:
  const std::string& _internal_nickname() const;
  void _internal_set_nickname(const std::string& value);
  std::string* _internal_mutable_nickname();
  public:

  // uint64 userid = 1;
  void clear_userid();
  ::PROTOBUF_NAMESPACE_ID::uint64 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_userid() const;
  void _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 rolecfgid = 2;
  void clear_rolecfgid();
  ::PROTOBUF_NAMESPACE_ID::uint32 rolecfgid() const;
  void set_rolecfgid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rolecfgid() const;
  void _internal_set_rolecfgid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 level = 4;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 gameunion = 6;
  void clear_gameunion();
  ::PROTOBUF_NAMESPACE_ID::uint64 gameunion() const;
  void set_gameunion(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gameunion() const;
  void _internal_set_gameunion(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 exp = 5;
  void clear_exp();
  ::PROTOBUF_NAMESPACE_ID::int32 exp() const;
  void set_exp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_exp() const;
  void _internal_set_exp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:game.CharaterInfoResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nickname_;
  ::PROTOBUF_NAMESPACE_ID::uint64 userid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rolecfgid_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gameunion_;
  ::PROTOBUF_NAMESPACE_ID::int32 exp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_5fgame_5fcharater_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CharaterInfoRequest

// uint64 userid = 1;
inline void CharaterInfoRequest::clear_userid() {
  userid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CharaterInfoRequest::_internal_userid() const {
  return userid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CharaterInfoRequest::userid() const {
  // @@protoc_insertion_point(field_get:game.CharaterInfoRequest.userid)
  return _internal_userid();
}
inline void CharaterInfoRequest::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  userid_ = value;
}
inline void CharaterInfoRequest::set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:game.CharaterInfoRequest.userid)
}

// -------------------------------------------------------------------

// CharaterInfoResponse

// uint64 userid = 1;
inline void CharaterInfoResponse::clear_userid() {
  userid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CharaterInfoResponse::_internal_userid() const {
  return userid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CharaterInfoResponse::userid() const {
  // @@protoc_insertion_point(field_get:game.CharaterInfoResponse.userid)
  return _internal_userid();
}
inline void CharaterInfoResponse::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  userid_ = value;
}
inline void CharaterInfoResponse::set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:game.CharaterInfoResponse.userid)
}

// uint32 rolecfgid = 2;
inline void CharaterInfoResponse::clear_rolecfgid() {
  rolecfgid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharaterInfoResponse::_internal_rolecfgid() const {
  return rolecfgid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharaterInfoResponse::rolecfgid() const {
  // @@protoc_insertion_point(field_get:game.CharaterInfoResponse.rolecfgid)
  return _internal_rolecfgid();
}
inline void CharaterInfoResponse::_internal_set_rolecfgid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rolecfgid_ = value;
}
inline void CharaterInfoResponse::set_rolecfgid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rolecfgid(value);
  // @@protoc_insertion_point(field_set:game.CharaterInfoResponse.rolecfgid)
}

// string nickname = 3;
inline void CharaterInfoResponse::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CharaterInfoResponse::nickname() const {
  // @@protoc_insertion_point(field_get:game.CharaterInfoResponse.nickname)
  return _internal_nickname();
}
inline void CharaterInfoResponse::set_nickname(const std::string& value) {
  _internal_set_nickname(value);
  // @@protoc_insertion_point(field_set:game.CharaterInfoResponse.nickname)
}
inline std::string* CharaterInfoResponse::mutable_nickname() {
  // @@protoc_insertion_point(field_mutable:game.CharaterInfoResponse.nickname)
  return _internal_mutable_nickname();
}
inline const std::string& CharaterInfoResponse::_internal_nickname() const {
  return nickname_.GetNoArena();
}
inline void CharaterInfoResponse::_internal_set_nickname(const std::string& value) {
  
  nickname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CharaterInfoResponse::set_nickname(std::string&& value) {
  
  nickname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:game.CharaterInfoResponse.nickname)
}
inline void CharaterInfoResponse::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nickname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:game.CharaterInfoResponse.nickname)
}
inline void CharaterInfoResponse::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:game.CharaterInfoResponse.nickname)
}
inline std::string* CharaterInfoResponse::_internal_mutable_nickname() {
  
  return nickname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CharaterInfoResponse::release_nickname() {
  // @@protoc_insertion_point(field_release:game.CharaterInfoResponse.nickname)
  
  return nickname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CharaterInfoResponse::set_allocated_nickname(std::string* nickname) {
  if (nickname != nullptr) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:game.CharaterInfoResponse.nickname)
}

// int32 level = 4;
inline void CharaterInfoResponse::clear_level() {
  level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CharaterInfoResponse::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CharaterInfoResponse::level() const {
  // @@protoc_insertion_point(field_get:game.CharaterInfoResponse.level)
  return _internal_level();
}
inline void CharaterInfoResponse::_internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  level_ = value;
}
inline void CharaterInfoResponse::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:game.CharaterInfoResponse.level)
}

// int32 exp = 5;
inline void CharaterInfoResponse::clear_exp() {
  exp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CharaterInfoResponse::_internal_exp() const {
  return exp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CharaterInfoResponse::exp() const {
  // @@protoc_insertion_point(field_get:game.CharaterInfoResponse.exp)
  return _internal_exp();
}
inline void CharaterInfoResponse::_internal_set_exp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  exp_ = value;
}
inline void CharaterInfoResponse::set_exp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_exp(value);
  // @@protoc_insertion_point(field_set:game.CharaterInfoResponse.exp)
}

// uint64 gameunion = 6;
inline void CharaterInfoResponse::clear_gameunion() {
  gameunion_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CharaterInfoResponse::_internal_gameunion() const {
  return gameunion_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CharaterInfoResponse::gameunion() const {
  // @@protoc_insertion_point(field_get:game.CharaterInfoResponse.gameunion)
  return _internal_gameunion();
}
inline void CharaterInfoResponse::_internal_set_gameunion(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  gameunion_ = value;
}
inline void CharaterInfoResponse::set_gameunion(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gameunion(value);
  // @@protoc_insertion_point(field_set:game.CharaterInfoResponse.gameunion)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace game

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_msg_5fgame_5fcharater_2eproto
