// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_packet.proto

#ifndef PROTOBUF_data_5fpacket_2eproto__INCLUDED
#define PROTOBUF_data_5fpacket_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace node {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_data_5fpacket_2eproto();
void protobuf_AssignDesc_data_5fpacket_2eproto();
void protobuf_ShutdownFile_data_5fpacket_2eproto();

class DataPacket;

// ===================================================================

class DataPacket : public ::google::protobuf::Message {
 public:
  DataPacket();
  virtual ~DataPacket();

  DataPacket(const DataPacket& from);

  inline DataPacket& operator=(const DataPacket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataPacket& default_instance();

  void Swap(DataPacket* other);

  // implements Message ----------------------------------------------

  DataPacket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataPacket& from);
  void MergeFrom(const DataPacket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::int32 cmd() const;
  inline void set_cmd(::google::protobuf::int32 value);

  // optional int32 route_type = 2;
  inline bool has_route_type() const;
  inline void clear_route_type();
  static const int kRouteTypeFieldNumber = 2;
  inline ::google::protobuf::int32 route_type() const;
  inline void set_route_type(::google::protobuf::int32 value);

  // optional uint64 route = 3;
  inline bool has_route() const;
  inline void clear_route();
  static const int kRouteFieldNumber = 3;
  inline ::google::protobuf::uint64 route() const;
  inline void set_route(::google::protobuf::uint64 value);

  // optional int32 result = 4;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 4;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional bytes data = 5;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:node.DataPacket)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_route_type();
  inline void clear_has_route_type();
  inline void set_has_route();
  inline void clear_has_route();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 route_type_;
  ::google::protobuf::uint64 route_;
  ::std::string* data_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_data_5fpacket_2eproto();
  friend void protobuf_AssignDesc_data_5fpacket_2eproto();
  friend void protobuf_ShutdownFile_data_5fpacket_2eproto();

  void InitAsDefaultInstance();
  static DataPacket* default_instance_;
};
// ===================================================================


// ===================================================================

// DataPacket

// required int32 cmd = 1;
inline bool DataPacket::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataPacket::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataPacket::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataPacket::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 DataPacket::cmd() const {
  return cmd_;
}
inline void DataPacket::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
}

// optional int32 route_type = 2;
inline bool DataPacket::has_route_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataPacket::set_has_route_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataPacket::clear_has_route_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataPacket::clear_route_type() {
  route_type_ = 0;
  clear_has_route_type();
}
inline ::google::protobuf::int32 DataPacket::route_type() const {
  return route_type_;
}
inline void DataPacket::set_route_type(::google::protobuf::int32 value) {
  set_has_route_type();
  route_type_ = value;
}

// optional uint64 route = 3;
inline bool DataPacket::has_route() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataPacket::set_has_route() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataPacket::clear_has_route() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataPacket::clear_route() {
  route_ = GOOGLE_ULONGLONG(0);
  clear_has_route();
}
inline ::google::protobuf::uint64 DataPacket::route() const {
  return route_;
}
inline void DataPacket::set_route(::google::protobuf::uint64 value) {
  set_has_route();
  route_ = value;
}

// optional int32 result = 4;
inline bool DataPacket::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataPacket::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DataPacket::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DataPacket::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DataPacket::result() const {
  return result_;
}
inline void DataPacket::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional bytes data = 5;
inline bool DataPacket::has_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DataPacket::set_has_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DataPacket::clear_has_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DataPacket::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& DataPacket::data() const {
  return *data_;
}
inline void DataPacket::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void DataPacket::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void DataPacket::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataPacket::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* DataPacket::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataPacket::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace node

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_data_5fpacket_2eproto__INCLUDED
