// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: broadcast_packet.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_broadcast_5fpacket_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_broadcast_5fpacket_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "data_packet.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_broadcast_5fpacket_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_broadcast_5fpacket_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_broadcast_5fpacket_2eproto;
namespace node {
class BroadcastRequest;
class BroadcastRequestDefaultTypeInternal;
extern BroadcastRequestDefaultTypeInternal _BroadcastRequest_default_instance_;
class ForwardRequest;
class ForwardRequestDefaultTypeInternal;
extern ForwardRequestDefaultTypeInternal _ForwardRequest_default_instance_;
}  // namespace node
PROTOBUF_NAMESPACE_OPEN
template<> ::node::BroadcastRequest* Arena::CreateMaybeMessage<::node::BroadcastRequest>(Arena*);
template<> ::node::ForwardRequest* Arena::CreateMaybeMessage<::node::ForwardRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace node {

// ===================================================================

class BroadcastRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:node.BroadcastRequest) */ {
 public:
  BroadcastRequest();
  virtual ~BroadcastRequest();

  BroadcastRequest(const BroadcastRequest& from);
  BroadcastRequest(BroadcastRequest&& from) noexcept
    : BroadcastRequest() {
    *this = ::std::move(from);
  }

  inline BroadcastRequest& operator=(const BroadcastRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BroadcastRequest& operator=(BroadcastRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BroadcastRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BroadcastRequest* internal_default_instance() {
    return reinterpret_cast<const BroadcastRequest*>(
               &_BroadcastRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BroadcastRequest& a, BroadcastRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(BroadcastRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BroadcastRequest* New() const final {
    return CreateMaybeMessage<BroadcastRequest>(nullptr);
  }

  BroadcastRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BroadcastRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BroadcastRequest& from);
  void MergeFrom(const BroadcastRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BroadcastRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "node.BroadcastRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_broadcast_5fpacket_2eproto);
    return ::descriptor_table_broadcast_5fpacket_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExcludeidsFieldNumber = 2,
    kIncludeidsFieldNumber = 3,
    kAgentidsFieldNumber = 4,
    kDataFieldNumber = 1,
  };
  // repeated uint64 excludeids = 2;
  int excludeids_size() const;
  private:
  int _internal_excludeids_size() const;
  public:
  void clear_excludeids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_excludeids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_excludeids() const;
  void _internal_add_excludeids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_excludeids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 excludeids(int index) const;
  void set_excludeids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_excludeids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      excludeids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_excludeids();

  // repeated uint64 includeids = 3;
  int includeids_size() const;
  private:
  int _internal_includeids_size() const;
  public:
  void clear_includeids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_includeids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_includeids() const;
  void _internal_add_includeids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_includeids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 includeids(int index) const;
  void set_includeids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_includeids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      includeids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_includeids();

  // repeated uint32 agentids = 4;
  int agentids_size() const;
  private:
  int _internal_agentids_size() const;
  public:
  void clear_agentids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_agentids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_agentids() const;
  void _internal_add_agentids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_agentids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 agentids(int index) const;
  void set_agentids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_agentids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      agentids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_agentids();

  // bytes data = 1;
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // @@protoc_insertion_point(class_scope:node.BroadcastRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > excludeids_;
  mutable std::atomic<int> _excludeids_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > includeids_;
  mutable std::atomic<int> _includeids_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > agentids_;
  mutable std::atomic<int> _agentids_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_broadcast_5fpacket_2eproto;
};
// -------------------------------------------------------------------

class ForwardRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:node.ForwardRequest) */ {
 public:
  ForwardRequest();
  virtual ~ForwardRequest();

  ForwardRequest(const ForwardRequest& from);
  ForwardRequest(ForwardRequest&& from) noexcept
    : ForwardRequest() {
    *this = ::std::move(from);
  }

  inline ForwardRequest& operator=(const ForwardRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ForwardRequest& operator=(ForwardRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ForwardRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ForwardRequest* internal_default_instance() {
    return reinterpret_cast<const ForwardRequest*>(
               &_ForwardRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ForwardRequest& a, ForwardRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ForwardRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ForwardRequest* New() const final {
    return CreateMaybeMessage<ForwardRequest>(nullptr);
  }

  ForwardRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ForwardRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ForwardRequest& from);
  void MergeFrom(const ForwardRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ForwardRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "node.ForwardRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_broadcast_5fpacket_2eproto);
    return ::descriptor_table_broadcast_5fpacket_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentidsFieldNumber = 2,
    kDataFieldNumber = 1,
    kMapidFieldNumber = 3,
  };
  // repeated uint32 agentids = 2;
  int agentids_size() const;
  private:
  int _internal_agentids_size() const;
  public:
  void clear_agentids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_agentids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_agentids() const;
  void _internal_add_agentids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_agentids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 agentids(int index) const;
  void set_agentids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_agentids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      agentids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_agentids();

  // .node.DataPacket data = 1;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::node::DataPacket& data() const;
  ::node::DataPacket* release_data();
  ::node::DataPacket* mutable_data();
  void set_allocated_data(::node::DataPacket* data);
  private:
  const ::node::DataPacket& _internal_data() const;
  ::node::DataPacket* _internal_mutable_data();
  public:

  // uint32 mapid = 3;
  void clear_mapid();
  ::PROTOBUF_NAMESPACE_ID::uint32 mapid() const;
  void set_mapid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mapid() const;
  void _internal_set_mapid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:node.ForwardRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > agentids_;
  mutable std::atomic<int> _agentids_cached_byte_size_;
  ::node::DataPacket* data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mapid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_broadcast_5fpacket_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BroadcastRequest

// bytes data = 1;
inline void BroadcastRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& BroadcastRequest::data() const {
  // @@protoc_insertion_point(field_get:node.BroadcastRequest.data)
  return _internal_data();
}
inline void BroadcastRequest::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:node.BroadcastRequest.data)
}
inline std::string* BroadcastRequest::mutable_data() {
  // @@protoc_insertion_point(field_mutable:node.BroadcastRequest.data)
  return _internal_mutable_data();
}
inline const std::string& BroadcastRequest::_internal_data() const {
  return data_.GetNoArena();
}
inline void BroadcastRequest::_internal_set_data(const std::string& value) {
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void BroadcastRequest::set_data(std::string&& value) {
  
  data_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:node.BroadcastRequest.data)
}
inline void BroadcastRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:node.BroadcastRequest.data)
}
inline void BroadcastRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:node.BroadcastRequest.data)
}
inline std::string* BroadcastRequest::_internal_mutable_data() {
  
  return data_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* BroadcastRequest::release_data() {
  // @@protoc_insertion_point(field_release:node.BroadcastRequest.data)
  
  return data_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void BroadcastRequest::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:node.BroadcastRequest.data)
}

// repeated uint64 excludeids = 2;
inline int BroadcastRequest::_internal_excludeids_size() const {
  return excludeids_.size();
}
inline int BroadcastRequest::excludeids_size() const {
  return _internal_excludeids_size();
}
inline void BroadcastRequest::clear_excludeids() {
  excludeids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BroadcastRequest::_internal_excludeids(int index) const {
  return excludeids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BroadcastRequest::excludeids(int index) const {
  // @@protoc_insertion_point(field_get:node.BroadcastRequest.excludeids)
  return _internal_excludeids(index);
}
inline void BroadcastRequest::set_excludeids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  excludeids_.Set(index, value);
  // @@protoc_insertion_point(field_set:node.BroadcastRequest.excludeids)
}
inline void BroadcastRequest::_internal_add_excludeids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  excludeids_.Add(value);
}
inline void BroadcastRequest::add_excludeids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_excludeids(value);
  // @@protoc_insertion_point(field_add:node.BroadcastRequest.excludeids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
BroadcastRequest::_internal_excludeids() const {
  return excludeids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
BroadcastRequest::excludeids() const {
  // @@protoc_insertion_point(field_list:node.BroadcastRequest.excludeids)
  return _internal_excludeids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
BroadcastRequest::_internal_mutable_excludeids() {
  return &excludeids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
BroadcastRequest::mutable_excludeids() {
  // @@protoc_insertion_point(field_mutable_list:node.BroadcastRequest.excludeids)
  return _internal_mutable_excludeids();
}

// repeated uint64 includeids = 3;
inline int BroadcastRequest::_internal_includeids_size() const {
  return includeids_.size();
}
inline int BroadcastRequest::includeids_size() const {
  return _internal_includeids_size();
}
inline void BroadcastRequest::clear_includeids() {
  includeids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BroadcastRequest::_internal_includeids(int index) const {
  return includeids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BroadcastRequest::includeids(int index) const {
  // @@protoc_insertion_point(field_get:node.BroadcastRequest.includeids)
  return _internal_includeids(index);
}
inline void BroadcastRequest::set_includeids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  includeids_.Set(index, value);
  // @@protoc_insertion_point(field_set:node.BroadcastRequest.includeids)
}
inline void BroadcastRequest::_internal_add_includeids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  includeids_.Add(value);
}
inline void BroadcastRequest::add_includeids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_includeids(value);
  // @@protoc_insertion_point(field_add:node.BroadcastRequest.includeids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
BroadcastRequest::_internal_includeids() const {
  return includeids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
BroadcastRequest::includeids() const {
  // @@protoc_insertion_point(field_list:node.BroadcastRequest.includeids)
  return _internal_includeids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
BroadcastRequest::_internal_mutable_includeids() {
  return &includeids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
BroadcastRequest::mutable_includeids() {
  // @@protoc_insertion_point(field_mutable_list:node.BroadcastRequest.includeids)
  return _internal_mutable_includeids();
}

// repeated uint32 agentids = 4;
inline int BroadcastRequest::_internal_agentids_size() const {
  return agentids_.size();
}
inline int BroadcastRequest::agentids_size() const {
  return _internal_agentids_size();
}
inline void BroadcastRequest::clear_agentids() {
  agentids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BroadcastRequest::_internal_agentids(int index) const {
  return agentids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BroadcastRequest::agentids(int index) const {
  // @@protoc_insertion_point(field_get:node.BroadcastRequest.agentids)
  return _internal_agentids(index);
}
inline void BroadcastRequest::set_agentids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  agentids_.Set(index, value);
  // @@protoc_insertion_point(field_set:node.BroadcastRequest.agentids)
}
inline void BroadcastRequest::_internal_add_agentids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  agentids_.Add(value);
}
inline void BroadcastRequest::add_agentids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_agentids(value);
  // @@protoc_insertion_point(field_add:node.BroadcastRequest.agentids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
BroadcastRequest::_internal_agentids() const {
  return agentids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
BroadcastRequest::agentids() const {
  // @@protoc_insertion_point(field_list:node.BroadcastRequest.agentids)
  return _internal_agentids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
BroadcastRequest::_internal_mutable_agentids() {
  return &agentids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
BroadcastRequest::mutable_agentids() {
  // @@protoc_insertion_point(field_mutable_list:node.BroadcastRequest.agentids)
  return _internal_mutable_agentids();
}

// -------------------------------------------------------------------

// ForwardRequest

// .node.DataPacket data = 1;
inline bool ForwardRequest::_internal_has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline bool ForwardRequest::has_data() const {
  return _internal_has_data();
}
inline const ::node::DataPacket& ForwardRequest::_internal_data() const {
  const ::node::DataPacket* p = data_;
  return p != nullptr ? *p : *reinterpret_cast<const ::node::DataPacket*>(
      &::node::_DataPacket_default_instance_);
}
inline const ::node::DataPacket& ForwardRequest::data() const {
  // @@protoc_insertion_point(field_get:node.ForwardRequest.data)
  return _internal_data();
}
inline ::node::DataPacket* ForwardRequest::release_data() {
  // @@protoc_insertion_point(field_release:node.ForwardRequest.data)
  
  ::node::DataPacket* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::node::DataPacket* ForwardRequest::_internal_mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::node::DataPacket>(GetArenaNoVirtual());
    data_ = p;
  }
  return data_;
}
inline ::node::DataPacket* ForwardRequest::mutable_data() {
  // @@protoc_insertion_point(field_mutable:node.ForwardRequest.data)
  return _internal_mutable_data();
}
inline void ForwardRequest::set_allocated_data(::node::DataPacket* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_);
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:node.ForwardRequest.data)
}

// repeated uint32 agentids = 2;
inline int ForwardRequest::_internal_agentids_size() const {
  return agentids_.size();
}
inline int ForwardRequest::agentids_size() const {
  return _internal_agentids_size();
}
inline void ForwardRequest::clear_agentids() {
  agentids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ForwardRequest::_internal_agentids(int index) const {
  return agentids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ForwardRequest::agentids(int index) const {
  // @@protoc_insertion_point(field_get:node.ForwardRequest.agentids)
  return _internal_agentids(index);
}
inline void ForwardRequest::set_agentids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  agentids_.Set(index, value);
  // @@protoc_insertion_point(field_set:node.ForwardRequest.agentids)
}
inline void ForwardRequest::_internal_add_agentids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  agentids_.Add(value);
}
inline void ForwardRequest::add_agentids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_agentids(value);
  // @@protoc_insertion_point(field_add:node.ForwardRequest.agentids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ForwardRequest::_internal_agentids() const {
  return agentids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ForwardRequest::agentids() const {
  // @@protoc_insertion_point(field_list:node.ForwardRequest.agentids)
  return _internal_agentids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ForwardRequest::_internal_mutable_agentids() {
  return &agentids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ForwardRequest::mutable_agentids() {
  // @@protoc_insertion_point(field_mutable_list:node.ForwardRequest.agentids)
  return _internal_mutable_agentids();
}

// uint32 mapid = 3;
inline void ForwardRequest::clear_mapid() {
  mapid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ForwardRequest::_internal_mapid() const {
  return mapid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ForwardRequest::mapid() const {
  // @@protoc_insertion_point(field_get:node.ForwardRequest.mapid)
  return _internal_mapid();
}
inline void ForwardRequest::_internal_set_mapid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  mapid_ = value;
}
inline void ForwardRequest::set_mapid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mapid(value);
  // @@protoc_insertion_point(field_set:node.ForwardRequest.mapid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace node

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_broadcast_5fpacket_2eproto
