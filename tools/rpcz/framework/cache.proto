import "void_packet.proto";
import "interest_packet.proto";
import "data_packet.proto";

package node;


message MCRequest {
  required string key = 1;
  optional bytes value = 2;
  optional uint32 flags = 3;
  optional uint32 expiry = 4;
  optional uint64 cas = 5;
  optional int32 result = 6;
}

message CacheRequest {
  repeated MCRequest values = 1;
  optional string key = 2;
  optional bytes data = 3;
  optional uint32 offset = 4;
  optional uint32 count = 5;
  optional int32 result = 6;
}

message CacheResponse {
  repeated MCRequest values = 1;
  optional string key = 2;
  optional bytes data = 3;
  optional int32 result = 4;
}

service CacheService {
  rpc HandleNotification(DataPacket) returns(DataPacket);
  rpc HandleProtocol(DataPacket) returns(DataPacket);
  rpc ListNotificationInterests(VoidPacket) returns(InterestPacket);
  rpc ListProtocolInterests(VoidPacket) returns(InterestPacket);
}
